{"ast":null,"code":"var _jsxFileName = \"/home/nityam/Desktop/assisnment/Assignment/src/dumb-components/Snackbar/Snackbar.js\";\nimport React from \"react\";\nimport { IconButton, Snackbar, SnackbarContent } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { SharedSnackbarConsumer } from \"../../contexts/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { amber, green } from \"@material-ui/core/colors\";\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nconst SharedSnackbar = () => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(SharedSnackbarConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, ({\n    snackbarIsOpen,\n    message,\n    closeSnackbar,\n    varient\n  }) => {\n    return /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      } // style={{}}\n      ,\n      open: snackbarIsOpen,\n      autoHideDuration: 3000,\n      onClose: closeSnackbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SnackbarContent, {\n      className: varient ? classes[varient] : classes[\"info\"],\n      \"aria-describedby\": \"client-snackbar\",\n      message: /*#__PURE__*/React.createElement(\"span\", {\n        id: \"client-snackbar\",\n        className: classes.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, message),\n      action: [/*#__PURE__*/React.createElement(IconButton, {\n        key: \"close\",\n        color: \"inherit\",\n        onClick: closeSnackbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Close, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      }))],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }));\n  });\n};\n\nexport default SharedSnackbar;","map":{"version":3,"sources":["/home/nityam/Desktop/assisnment/Assignment/src/dumb-components/Snackbar/Snackbar.js"],"names":["React","IconButton","Snackbar","SnackbarContent","Close","SharedSnackbarConsumer","makeStyles","amber","green","useStyles","theme","success","backgroundColor","error","palette","dark","info","primary","main","warning","message","display","alignItems","SharedSnackbar","classes","snackbarIsOpen","closeSnackbar","varient","vertical","horizontal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,eAA/B,QAAsD,mBAAtD;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,sBAAT,QAAuC,yBAAvC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,0BAA7B;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAEJ,KAAK,CAAC,GAAD;AADf,GAD8B;AAIvCK,EAAAA,KAAK,EAAE;AACLD,IAAAA,eAAe,EAAEF,KAAK,CAACI,OAAN,CAAcD,KAAd,CAAoBE;AADhC,GAJgC;AAOvCC,EAAAA,IAAI,EAAE;AACJJ,IAAAA,eAAe,EAAEF,KAAK,CAACI,OAAN,CAAcG,OAAd,CAAsBC;AADnC,GAPiC;AAUvCC,EAAAA,OAAO,EAAE;AACPP,IAAAA,eAAe,EAAEL,KAAK,CAAC,GAAD;AADf,GAV8B;AAavCa,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,UAAU,EAAE;AAFL;AAb8B,CAAZ,CAAD,CAA5B;;AAmBA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,sBACE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEgB,IAAAA,cAAF;AAAkBL,IAAAA,OAAlB;AAA2BM,IAAAA,aAA3B;AAA0CC,IAAAA;AAA1C,GAAD,KAAyD;AACxD,wBACE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE;AACZC,QAAAA,QAAQ,EAAE,KADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OADhB,CAKE;AALF;AAME,MAAA,IAAI,EAAEJ,cANR;AAOE,MAAA,gBAAgB,EAAE,IAPpB;AAQE,MAAA,OAAO,EAAEC,aARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE,oBAAC,eAAD;AACE,MAAA,SAAS,EAAEC,OAAO,GAAGH,OAAO,CAACG,OAAD,CAAV,GAAsBH,OAAO,CAAC,MAAD,CADjD;AAEE,0BAAiB,iBAFnB;AAGE,MAAA,OAAO,eACL;AAAM,QAAA,EAAE,EAAC,iBAAT;AAA2B,QAAA,SAAS,EAAEA,OAAO,CAACJ,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OADH,CAJJ;AAQE,MAAA,MAAM,EAAE,cACN,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAC,OAAhB;AAAwB,QAAA,KAAK,EAAC,SAA9B;AAAwC,QAAA,OAAO,EAAEM,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADM,CARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AA2BD,GA7BH,CADF;AAiCD,CAnCD;;AAqCA,eAAeH,cAAf","sourcesContent":["import React from \"react\";\nimport { IconButton, Snackbar, SnackbarContent } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { SharedSnackbarConsumer } from \"../../contexts/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { amber, green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst SharedSnackbar = () => {\n  const classes = useStyles();\n  return (\n    <SharedSnackbarConsumer>\n      {({ snackbarIsOpen, message, closeSnackbar, varient }) => {\n        return (\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\",\n            }}\n            // style={{}}\n            open={snackbarIsOpen}\n            autoHideDuration={3000}\n            onClose={closeSnackbar}\n          >\n            <SnackbarContent\n              className={varient ? classes[varient] : classes[\"info\"]}\n              aria-describedby=\"client-snackbar\"\n              message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                  {message}\n                </span>\n              }\n              action={[\n                <IconButton key=\"close\" color=\"inherit\" onClick={closeSnackbar}>\n                  <Close />\n                </IconButton>,\n              ]}\n            />\n          </Snackbar>\n        );\n      }}\n    </SharedSnackbarConsumer>\n  );\n};\n\nexport default SharedSnackbar;\n"]},"metadata":{},"sourceType":"module"}