{"ast":null,"code":"var _jsxFileName = \"/home/nityam/Desktop/assisnment/Assignment/src/contexts/Snackbar.js\";\nimport React, { useContext, useState } from \"react\";\nimport { Snackbar } from \"../dumb-components\";\nconst SharedSnackbarContext = React.createContext(); // export class SharedSnackbarProvider extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       isOpen: false,\n//       message: \"\",\n//       varient: \"info\",\n//     };\n//   }\n//   openSnackbar = (message, varient) => {\n//     this.setState({\n//       message,\n//       isOpen: true,\n//       varient: varient || \"info\",\n//     });\n//   };\n//   closeSnackbar = () => {\n//     this.setState({\n//       message: \"\",\n//       isOpen: false,\n//       varient: \"info\",\n//     });\n//   };\n//   render() {\n//     const { children } = this.props;\n//     return (\n//       <SharedSnackbarContext.Provider\n//         value={{\n//           openSnackbar: this.openSnackbar,\n//           closeSnackbar: this.closeSnackbar,\n//           snackbarIsOpen: this.state.isOpen,\n//           message: this.state.message,\n//           varient: this.state.varient,\n//         }}\n//       >\n//         <Snackbar />\n//         {children}\n//       </SharedSnackbarContext.Provider>\n//     );\n//   }\n// }\n\nexport const SharedSnackbarProvider = ({\n  children\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [content, setContent] = useState({\n    varient: \"\",\n    message: \"\"\n  });\n\n  function openSnackbar(message, varient) {\n    setContent({\n      message,\n      varient\n    });\n    setIsOpen(true);\n  }\n\n  function closeSnackbar() {\n    setIsOpen(false);\n  }\n\n  return /*#__PURE__*/React.createElement(SharedSnackbarContext.Provider, {\n    value: {\n      openSnackbar: openSnackbar,\n      closeSnackbar: closeSnackbar,\n      snackbarIsOpen: isOpen,\n      message: content.message,\n      varient: content.varient\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), children);\n};\nexport const SharedSnackbarConsumer = SharedSnackbarContext.Consumer;\nexport function useSnackbar() {\n  return useContext(SharedSnackbarContext);\n}\nexport default SharedSnackbarContext;","map":{"version":3,"sources":["/home/nityam/Desktop/assisnment/Assignment/src/contexts/Snackbar.js"],"names":["React","useContext","useState","Snackbar","SharedSnackbarContext","createContext","SharedSnackbarProvider","children","isOpen","setIsOpen","content","setContent","varient","message","openSnackbar","closeSnackbar","snackbarIsOpen","SharedSnackbarConsumer","Consumer","useSnackbar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,MAAMC,qBAAqB,GAAGJ,KAAK,CAACK,aAAN,EAA9B,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;AACrCU,IAAAA,OAAO,EAAE,EAD4B;AAErCC,IAAAA,OAAO,EAAE;AAF4B,GAAD,CAAtC;;AAKA,WAASC,YAAT,CAAsBD,OAAtB,EAA+BD,OAA/B,EAAwC;AACtCD,IAAAA,UAAU,CAAC;AACTE,MAAAA,OADS;AAETD,MAAAA;AAFS,KAAD,CAAV;AAIAH,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASM,aAAT,GAAyB;AACvBN,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AAED,sBACE,oBAAC,qBAAD,CAAuB,QAAvB;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,YAAY,EAAEA,YADT;AAELC,MAAAA,aAAa,EAAEA,aAFV;AAGLC,MAAAA,cAAc,EAAER,MAHX;AAILK,MAAAA,OAAO,EAAEH,OAAO,CAACG,OAJZ;AAKLD,MAAAA,OAAO,EAAEF,OAAO,CAACE;AALZ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUGL,QAVH,CADF;AAcD,CAjCM;AAoCP,OAAO,MAAMU,sBAAsB,GAAGb,qBAAqB,CAACc,QAArD;AAEP,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAOlB,UAAU,CAACG,qBAAD,CAAjB;AACD;AAED,eAAeA,qBAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Snackbar } from \"../dumb-components\";\n\nconst SharedSnackbarContext = React.createContext();\n\n// export class SharedSnackbarProvider extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       isOpen: false,\n//       message: \"\",\n//       varient: \"info\",\n//     };\n//   }\n\n//   openSnackbar = (message, varient) => {\n//     this.setState({\n//       message,\n//       isOpen: true,\n//       varient: varient || \"info\",\n//     });\n//   };\n\n//   closeSnackbar = () => {\n//     this.setState({\n//       message: \"\",\n//       isOpen: false,\n//       varient: \"info\",\n//     });\n//   };\n\n//   render() {\n//     const { children } = this.props;\n\n//     return (\n//       <SharedSnackbarContext.Provider\n//         value={{\n//           openSnackbar: this.openSnackbar,\n//           closeSnackbar: this.closeSnackbar,\n//           snackbarIsOpen: this.state.isOpen,\n//           message: this.state.message,\n//           varient: this.state.varient,\n//         }}\n//       >\n//         <Snackbar />\n//         {children}\n//       </SharedSnackbarContext.Provider>\n//     );\n//   }\n// }\n\nexport const SharedSnackbarProvider = ({ children }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [content, setContent] = useState({\n    varient: \"\",\n    message: \"\",\n  });\n\n  function openSnackbar(message, varient) {\n    setContent({\n      message,\n      varient,\n    });\n    setIsOpen(true);\n  }\n\n  function closeSnackbar() {\n    setIsOpen(false);\n  }\n\n  return (\n    <SharedSnackbarContext.Provider\n      value={{\n        openSnackbar: openSnackbar,\n        closeSnackbar: closeSnackbar,\n        snackbarIsOpen: isOpen,\n        message: content.message,\n        varient: content.varient,\n      }}\n    >\n      <Snackbar />\n      {children}\n    </SharedSnackbarContext.Provider>\n  );\n};\n\n\nexport const SharedSnackbarConsumer = SharedSnackbarContext.Consumer;\n\nexport function useSnackbar() {\n  return useContext(SharedSnackbarContext);\n}\n\nexport default SharedSnackbarContext;\n"]},"metadata":{},"sourceType":"module"}